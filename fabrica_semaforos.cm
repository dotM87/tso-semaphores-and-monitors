int cantPiezasA = 0;
int cantPiezasB = 0;
int cantPiezasC = 0;
int maxProduccionPiezas = 2;
semaphore A = 1;
semaphore B = 1;
semaphore C = 0;

void crearA (int ID){
    
	wait(A);
	cantPiezasA++;
        cout << "Robot A." << ID << " produjo una pieza" << "\n";
        if (cantPiezasA == maxProduccionPiezas){
            signal(A);
	    wait(C);
	    cout << "En el almacen hay " << cantPiezasA << " piezas A" << "\n";
        }else{
            signal(A);
            cout << "En el almacen hay " << cantPiezasA << " piezas A" << "\n";
        }
    
}

void crearB (int ID){
    
        wait(B);
	cantPiezasB++;
        cout << "Robot B." << ID << " produjo una pieza" << "\n";
        if (cantPiezasB == maxProduccionPiezas){
            signal(B);
	    wait(C);
	    cout << "En el almacen hay " << cantPiezasB << " piezas B" << "\n";
        }else{
            signal(B);
	    cout << "En el almacen hay " << cantPiezasB << " piezas B" << "\n";
        }
}

void crearC (int ID){
   
	wait(A);
	wait(B);
	if((cantPiezasA==maxProduccionPiezas) && (cantPiezasB==maxProduccionPiezas)){
        	cantPiezasC++;
        	cout << "Robot C." << ID << " consume " << cantPiezasA << " pzs A y " << cantPiezasB << " pzs B" << "\n";
        	cantPiezasA = cantPiezasA - maxProduccionPiezas;
        	cantPiezasB = cantPiezasB - maxProduccionPiezas;
		cout << "Hay " << cantPiezasC << " piezas C" << "\n";
		signal(C);
	}else{
		signal(A);
		signal(B);
	}
    
}
	void robotA(int id) {while(1) {crearA(id);}}
	void robotB(int id) {while(1){crearB(id);}}
	void robotC(int id) {while(1){crearC(id);}}

void main(){
    cobegin{
        robotA(1);
        robotB(1);
	robotC(1);
	robotA(2);
        robotB(2);
	robotC(2);
    }
}